import type { Metadata } from "next"
import "@/styles/globals.css"
import { PageLayout } from "@/components/layout"
import { routing } from "@/i18n/routing"
import { geistMono, geistSans } from "@/styles/fonts"
import { NextIntlClientProvider, hasLocale } from "next-intl"
import { getMessages, getTranslations } from "next-intl/server"
import { notFound } from "next/navigation"

export async function generateMetadata({
  params,
}: {
  params: Promise<{ locale: "ru" | "en" }>
}): Promise<Metadata> {
  const { locale } = await params
  const t = await getTranslations({ locale, namespace: "home-page.meta" })

  if (!hasLocale(routing.locales, locale)) {
    notFound()
  }

  return {
    title: {
      default: t("title"),
      template: "%s | RealU",
    },
    description: "Generated by create next app",
    icons: {
      icon: "/favicon.ico",
    },
  }
}

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode
  params: Promise<{ locale: "ru" | "en" }>
}>) {
  const { locale } = await params
  const messages = await getMessages({ locale })

  if (!hasLocale(routing.locales, locale)) {
    notFound()
  }

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider locale={locale} messages={messages}>
          <PageLayout>{children}</PageLayout>
        </NextIntlClientProvider>
      </body>
    </html>
  )
}
